<rtc:RtcProfile xmlns:rtc="http://www.openrtp.org/namespaces/rtc" xmlns:rtcDoc="http://www.openrtp.org/namespaces/rtc_doc" xmlns:rtcExt="http://www.openrtp.org/namespaces/rtc_ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" rtc:id="RTC:1.0.0:HumanInterface:SFMLJoystick:Joystick Component using SFML Library" rtc:version="0.2">
  <rtc:BasicInfo rtc:activityType="PERIODIC" rtc:category="HumanInterface" rtc:componentKind="DataFlowComponent" rtc:componentType="STATIC" rtc:creationDate="2015-01-13T09:22:08+09:00" rtc:description="" rtc:executionRate="1000.0" rtc:executionType="PeriodicExecutionContext" rtc:maxInstances="15" rtc:name="SFMLJoystick" rtc:updateDate="2015-01-13T09:22:08+09:00" rtc:vendor="1.0.0" rtc:version="Joystick Component using SFML Library" rtcExt:saveProject="SFMLJoystick" xsi:type="rtcExt:basic_info_ext">
    <rtcDoc:Doc rtcDoc:algorithm="" rtcDoc:creator="Sugar Sweet Robotics" rtcDoc:description="SFML Joystick Component. Before you build, set SFML_ROOT environment variable to find SFML-2.2 directory." rtcDoc:inout="Output: Joystick State." rtcDoc:license="LGPL" rtcDoc:reference=""/>
  </rtc:BasicInfo>
  <rtc:Language rtc:kind="C++" xsi:type="rtcExt:language_ext"/>
  <rtc:Actions>
    <rtc:OnInitialize rtc:implemented="true" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnInitialize>
    <rtc:OnFinalize rtc:implemented="false" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnFinalize>
    <rtc:OnStartup rtc:implemented="false" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnStartup>
    <rtc:OnShutdown rtc:implemented="false" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnShutdown>
    <rtc:OnActivated rtc:implemented="true" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnActivated>
    <rtc:OnDeactivated rtc:implemented="true" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnDeactivated>
    <rtc:OnAborting rtc:implemented="false" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnAborting>
    <rtc:OnError rtc:implemented="false" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnError>
    <rtc:OnReset rtc:implemented="false" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnReset>
    <rtc:OnExecute rtc:implemented="true" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnExecute>
    <rtc:OnStateUpdate rtc:implemented="false" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnStateUpdate>
    <rtc:OnRateChanged rtc:implemented="false" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnRateChanged>
    <rtc:OnAction rtc:implemented="false" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnAction>
    <rtc:OnModeChanged rtc:implemented="false" xsi:type="rtcDoc:action_status_doc">
      <rtcDoc:Doc rtcDoc:description="" rtcDoc:postCondition="" rtcDoc:preCondition=""/>
    </rtc:OnModeChanged>
  </rtc:Actions>
  <rtc:DataPorts rtc:dataflowType="" rtc:idlFile="" rtc:interfaceType="" rtc:name="axis" rtc:portType="DataOutPort" rtc:subscriptionType="" rtc:type="RTC::TimedLongSeq" rtc:unit="" rtcExt:position="RIGHT" rtcExt:variableName="axis" xsi:type="rtcExt:dataport_ext">
    <rtcDoc:Doc rtcDoc:description="Axis of Joystick. Sequence is alligned as X, Y, Z, R, U, V, PovX, PovY." rtcDoc:number="" rtcDoc:occerrence="" rtcDoc:operation="" rtcDoc:semantics="" rtcDoc:type="" rtcDoc:unit=""/>
  </rtc:DataPorts>
  <rtc:DataPorts rtc:dataflowType="" rtc:idlFile="" rtc:interfaceType="" rtc:name="buttons" rtc:portType="DataOutPort" rtc:subscriptionType="" rtc:type="RTC::TimedBooleanSeq" rtc:unit="" rtcExt:position="RIGHT" rtcExt:variableName="buttons" xsi:type="rtcExt:dataport_ext">
    <rtcDoc:Doc rtcDoc:description="Buttons. The number of button is automatically detected by SFML. " rtcDoc:number="" rtcDoc:occerrence="" rtcDoc:operation="" rtcDoc:semantics="" rtcDoc:type="" rtcDoc:unit=""/>
  </rtc:DataPorts>
  <rtc:ConfigurationSet>
    <rtc:Configuration rtc:defaultValue="0" rtc:name="debug" rtc:type="int" rtc:unit="" rtcExt:variableName="debug" xsi:type="rtcExt:configuration_ext">
      <rtcDoc:Doc rtcDoc:constraint="" rtcDoc:dataname="" rtcDoc:defaultValue="" rtcDoc:description="If you want to confirm the input value from joystick, set 1." rtcDoc:range="" rtcDoc:unit=""/>
      <rtcExt:Properties rtcExt:name="__widget__" rtcExt:value="text"/>
    </rtc:Configuration>
    <rtc:Configuration rtc:defaultValue="0" rtc:name="id" rtc:type="int" rtc:unit="" rtcExt:variableName="id" xsi:type="rtcExt:configuration_ext">
      <rtcDoc:Doc rtcDoc:constraint="" rtcDoc:dataname="" rtcDoc:defaultValue="" rtcDoc:description="ID of Joystick. If you want to use multiple joysticks, use this value." rtcDoc:range="" rtcDoc:unit=""/>
      <rtcExt:Properties rtcExt:name="__widget__" rtcExt:value="text"/>
    </rtc:Configuration>
    <rtc:Configuration rtc:defaultValue="100" rtc:name="axis_max" rtc:type="int" rtc:unit="" rtcExt:variableName="axis_max" xsi:type="rtcExt:configuration_ext">
      <rtcDoc:Doc rtcDoc:constraint="" rtcDoc:dataname="" rtcDoc:defaultValue="" rtcDoc:description="Max Value of Axis." rtcDoc:range="" rtcDoc:unit=""/>
      <rtcExt:Properties rtcExt:name="__widget__" rtcExt:value="text"/>
    </rtc:Configuration>
    <rtc:Configuration rtc:defaultValue="event" rtc:name="buttonOutputStyle" rtc:type="string" rtc:unit="" rtcExt:variableName="buttonOutputStyle" xsi:type="rtcExt:configuration_ext">
      <rtcDoc:Doc rtcDoc:constraint="" rtcDoc:dataname="" rtcDoc:defaultValue="" rtcDoc:description="This value defines the output style of buttons OutPort. If this configuration is event, the buttons port sends value only when the button states are changed. If this is continuous, the button port sends buttons state evely onExecute step." rtcDoc:range="" rtcDoc:unit=""/>
      <rtcExt:Properties rtcExt:name="__widget__" rtcExt:value="spin."/>
      <rtc:Constraint>
        <rtc:ConstraintUnitType/>
      </rtc:Constraint>
    </rtc:Configuration>
  </rtc:ConfigurationSet>
</rtc:RtcProfile>
