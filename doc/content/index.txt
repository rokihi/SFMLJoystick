SFMLJoystickName - English
========================

.. toctree::
   :hidden:

   index_j


Introduction
============


For a full list of classes and functions, see the `API documentation`_.

.. _`API Documentation`:
   doxygen/html/index.html

Requirements
============

SFMLJoystick uses the `CMake build system`. You will need at least version
2.8 to be able to build the component.

.. _`CMAke build system`:
   http://www.cmake.org


Installation
============

Binary
------

Users of Windows can install the component using the binary installer. This
will install the component and all its necessary dependencies. It is the
recommended method of installation in Windows.

- Download the installer from the website.
- Double-click the executable file to begin installation.
- Follow the instructions to install the component.
- You may need to restart your computer for environment variable changes
  to take effect before using the component.

The component can be launched by double-clicking the
``SFMLJoystickComp`` executable. The ``SFMLJoystick`` library
is available for loading into a manager, using the initialisation function
``SFMLJoystickInit``.

From source
-----------

Follow these steps to install SFMLJoystick from source in any operating
system:

- Download the source, either from the repository or a source archive,
  and extract it somewhere::

    tar -xvzf SFMLJoystick-1.0.0.tar.gz

- Change to the directory containing the extracted source::

    cd SFMLJoystick-1.0.0

- Create a directory called ``build``::

    mkdir build

- Change to that directory::

    cd build

- Run cmake or cmake-gui::

    cmake ../

- If no errors occurred, run make::

    make

- Finally, install the component. Ensure the necessary permissions to
  install into the chosen prefix are available::

    make install

- The install destination can be changed by executing ccmake and changing
  the variable ``CMAKE_INSTALL_PREFIX``::

    ccmake ../

The component is now ready for use. See the next section for instructions on
configuring the component.

SFMLJoystick can be launched in stand-alone mode by executing the
``SFMLJoystickComp`` executable (installed into ``${prefix}/components/bin``).
Alternatively, ``libSFMLJoystick.so`` can be loaded into a manager, using the
initialisation function ``SFMLJoystickInit``. This shared object can be found in
``${prefix}/components/lib`` or ``${prefix}/components/lib64``.


Configuration
=============

The available configuration parameters are described below:

================ ================== ================ ======
Parameter        Data type          Default Value    Effect
================ ================== ================ ======
debug            int                0                If you want to confirm the input value from joystick, set 1.
id               int                0                ID of Joystick. If you want to use multiple joysticks, use this value.
buttonOutputStyle string             event            This value defines the output style of buttons OutPort. If this configuration is event, the buttons port sends value only when the button states are changed. If this is continuous, the button port sends buttons state evely onExecute step.
================ ================== ================ ======

Ports
=====

The ports provided by the component are described below:

=============== =========== ============================== =======
Name            Type        Data type                      Purpose
=============== =========== ============================== =======
axis            OutPort     RTC::TimedLongSeq              Axis of Joystick. Sequence is alligned as X, Y, Z, R, U, V, PovX, PovY.
buttons         OutPort     RTC::TimedBooleanSeq           Buttons. The number of button is automatically detected by SFML. 
=============== =========== ============================== =======

Examples
========

An example configuration file is provided in the
``${prefix}/components/share/SFMLJoystick/examples/conf/`` directory.

Changelog
=========



License
=======

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

